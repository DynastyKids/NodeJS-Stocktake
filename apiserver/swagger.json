{
  "openapi": "3.0.0",
  "info": {
    "title": "Warehouse Stocktake via Swagger",
    "description": "This is a Sample Warehouse Stocktake application based on the OpenAPI 3.0 specification.\n\nThis application are require in coherience running with Wechat Miniprogram and Electron distributed package. If you are require customization, please contact author via Github.\n\nAPI information was generated with Swagger Editor\n\n*** \n该项目是个仓库管理场景的开源项目，允许用户搭配小程序、移动应用（开发中）以协助管理仓库\n\nAPI接口信息由DyanstyKids使用Swagger Editor制作，采用OpenAPI 3标准，项目开源于 https://github.com/DynastyKids/NodeJS-Stocktake\n***",
    "contact": {
      "email": "shabibox@outlook.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.9.5"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/api"
    },
    {
      "url": "https://127.0.0.1:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Sessions",
      "description": "Everything about your stocktake sessions | 所有会话相关接口"
    },
    {
      "name": "Products",
      "description": "Everything about your products | 所有和产品相关的增删改查操作"
    },
    {
      "name": "Stocks",
      "description": "Everything about your stocks | 所有库存相关的增删改查操作"
    }
  ],
  "paths": {
    "/v1/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get all current sessions available | 获取当前可用的所有Session",
        "description": "Get sessions available to join, user will require to use this while scanning products | 获取可以加入的Session，该端口为开放以允许所有用户加入",
        "operationId": "selectSessions",
        "responses": {
          "200": {
            "description": "Successful | 成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error | 失败"
          }
        }
      }
    },
    "/v1/sessions/join": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Join a Session from client | 使用客户端加入一个会话",
        "description": "(Optional *) It's not mandatory requirement as long as user send a valid request from with valid session code, this only for check if session exist purpose. | 非必要请求，仅用于识别用户加入的会话是否是合法会话",
        "operationId": "sessionJoin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": {
                    "type": "string",
                    "description": "Session code, hexadecimal 7 digits",
                    "example": "1a2b3c4d"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Join Session Success | 加入会话成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Join Session Failed | 加入会话失败",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessions/add": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Create a Session from user Client | 允许用户通过客户端创建一个新的会话，其他用户可以直接加入该会话",
        "operationId": "sessionCreate",
        "responses": {
          "200": {
            "description": "Create session success | 创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session"
                }
              }
            }
          },
          "500": {
            "description": "Create session Failed | 创建失败",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/session/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Get all products under current sort-take session | 获取某个会话的盘点结果",
        "operationId": "getSessionlog",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Code of request session log | 需要获取列表的sessioncode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful | 成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error | 失败",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessionlogs/itemadd": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Adding items by scanner",
        "description": "Wechat program will automatic input scanning items via this interface",
        "operationId": "addlogOld",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session code that available from /sessions request",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item",
            "in": "query",
            "description": "A base64 encrypted string contains all product info as schema shows",
            "required": true,
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglog"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglog"
                }
              }
            }
          }
        }
      }
    },
    "/v1/session/addlog": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Adding items from third-party | 从API添加一个扫描记录",
        "description": "Thirdparty using session code + base64 string of the product to adding a session log | 该端口目前交由移动端提供会话号和产品base64编码信息",
        "operationId": "addlog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sessionAddlog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "500": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all available products | 获取所有产品信息",
        "description": "Get all available product information, or selected product information when provide a keywork | 获取产品相关信息,若用户提供了某个关键词则会执行搜索并返回所有相关的信息",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "Successful | 成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productsResponse"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error | 失败",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Adding/edit a product | 添加或修改一个产品",
        "description": "Adding a product to product list,",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Actions alloed: add, update. On update, will update based on product code & vendor code.",
                    "example": "add / update"
                  },
                  "item": {
                    "$ref": "#/components/schemas/product"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Get all available current Stocks inhouse | 获取所有当前库存信息",
        "description": "Stock information are pulled across all session, user needs to tick off from page when used | 库存页面会展示所有当前可用库存，当库存信息有差异时可以选择仅使用某次的盘点结果对库存进行核对",
        "operationId": "getStocks",
        "responses": {
          "200": {
            "description": "Successful | 成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stocks"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error | 失败",
            "content": {
              "application/json": {
                "example": {
                  "acknowledged": false
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stocks"
        ],
        "summary": "Add  / Move / Consume Stocks | 添加，修改，移动和删除货架上的货品信息",
        "description": "对货架上的商品信息进行增改删时需要action和新信息，",
        "operationId": "poststocks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Actions alloed: add, move, update, remove. | 允许操作包括增删改查，填入对应关键词，当update时，使用labelid作为主键更新，labelid本身不允许更新",
                    "example": "add / move / update / remove"
                  },
                  "item": {
                    "$ref": "#/components/schemas/pollinglog"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "trueORfalse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "object",
            "description": "This session remain as empty under this request"
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "session": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "object",
            "description": "Session Infos",
            "properties": {
              "session": {
                "type": "string",
                "description": "7bit code of session identifier"
              },
              "startDate": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "Session start time"
              },
              "endDate": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "Session finish time"
              },
              "logTime": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "System automated logged time when entry inputed"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "pollinglog": {
        "type": "object",
        "properties": {
          "session": {
            "type": "string",
            "example": "1A2B3C4",
            "description": "When adding stocks, using STOCK as session code. | 当添加库存且不指定会话代码时，可使用STOCK替代"
          },
          "productCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "quantityUnit": {
            "type": "string",
            "example": "Bag"
          },
          "shelfLocation": {
            "type": "string",
            "example": "AA"
          },
          "POIPnumber": {
            "type": "string",
            "description": "Purchease Order Identification Number (Optional)"
          },
          "productName": {
            "type": "string"
          },
          "bestbefore": {
            "type": "string",
            "format": "date"
          },
          "productLabel": {
            "type": "string",
            "description": "Product Label Identification Number, must be identical, format as YYYYMMDD1234567, last 7 chars can be Hexadecimal"
          },
          "loggingTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "consumed": {
            "type": "integer",
            "format": "int32",
            "description": "Flag used to identify whether product has been removed from DB"
          },
          "consumedTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          }
        }
      },
      "pollinglogsRespose": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pollinglog"
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "sessionAddlog": {
        "type": "object",
        "properties": {
          "session": {
            "type": "string",
            "description": "session code for the adding action"
          },
          "item": {
            "type": "string",
            "description": "Base64 encoded string for the product information"
          }
        }
      },
      "stocks": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/pollinglog"
        }
      },
      "product": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "itemcode": {
            "type": "string"
          },
          "labelname": {
            "type": "string"
          },
          "palletqty": {
            "type": "integer",
            "format": "int32"
          },
          "productUnit": {
            "type": "string",
            "example": "carton"
          },
          "vendorCode": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "withBestbefore": {
            "type": "integer",
            "format": "int"
          }
        }
      },
      "productsResponse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      }
    }
  }
}