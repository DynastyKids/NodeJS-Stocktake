{
  "openapi": "3.0.0",
  "info": {
    "title": "Warehouse Stocktake via Swagger",
    "description": "This is a Sample Warehouse Stocktake application based on the OpenAPI 3.0 specification.\n\nThis application can run with your own build applications by utilise these APIs, which allows to provide a same level access as native application. \n\nAPI information was generated with Swagger Editor\n\n\n该项目是个仓库管理场景的开源项目，允许用户搭配手机自身浏览器、移动应用（开发中）以协助管理仓库\n\nAPI接口信息由DyanstyKids使用Swagger Editor制作，采用OpenAPI 3标准，项目开源于 https://github.com/DynastyKids/NodeJS-Stocktake\n***",
    "contact": {
      "email": "shabibox@outlook.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.9.9"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/api"
    },
    {
      "url": "https://127.0.0.1:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Everything about your products"
    },
    {
      "name": "Stocks",
      "description": "Everything about your stocks"
    },
    {
      "name": "Preload",
      "description": "Prefill the label to prepare for adding to stocks\n"
    },
    {
      "name": "Snapshots",
      "description": "This section provide a frozen records of your stock at specific times \n"
    }
  ],
  "paths": {
    "/v1/ping": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Respond with service status",
        "operationId": "testping",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/baseResponse"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error"
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all available products | 获取所有产品信息",
        "description": "Get all available product information, or selected product information when provide a keywork \n\n获取产品相关信息,若用户提供了某个关键词则会执行搜索并返回所有相关的信息\n",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Adding Optional search query\n\n添加搜索条件对结果过滤\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productsResponse"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product/add": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a product | 添加一个产品",
        "description": "This method is now merged with /product/update, with difference of upsert has been forced set as TRUE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "$ref": "#/components/schemas/product"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product/update": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Update an information of product | 更新一个产品信息",
        "description": "This method is used to update the product informations, using same base function as /product/add, with optional control of upsert value (default upsert = true)",
        "parameters": [
          {
            "name": "upsert",
            "in": "query",
            "description": "If product is not found, should this info be inserted? (Default by true, set to false if not wish to)",
            "required": false,
            "schema": {
              "enum": [
                true,
                false
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "$ref": "#/components/schemas/product"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Get all available current Stocks inhouse | 获取所有当前库存信息",
        "description": "Stock information are pulled across all session, user needs to tick off from page when used\n",
        "operationId": "getStocks",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Optional, Adding session ID for filter the result, STOCK keyword also allowed\n\n可选参数，使用SessionID过滤出相关的库存信息，也可以使用STOCK关键字列出所有添加库存时的记录\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Optional, Using at lease 2 characters for location to filter the result\n\n可选参数，需要提供至少2位字母的库位号来过滤库存信息\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Optional, typein part of label id (at least 3 characters) to filter the results\n\n可选参数，可以使用labelid的尾部字段（至少3位字符）来筛选需要的库存信息\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Optional, typein part of product id (at least 3 characters) to filter the results \n\n可选参数，使用产品ID（至少3位字符）来筛选需要的库存信息\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "removed",
            "in": "query",
            "description": "Optional, 0 for in-stock products only(default), 1 for including all history products  \n\n可选参数，是否需要从已使用的产品中查找，默认为0(仅查找现有库存)，1为包括所有历史参数\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "1"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks/update": {
      "post": {
        "tags": [
          "Stocks"
        ],
        "summary": "Add / Edit / Update | 添加，修改和更新货架上的货品信息",
        "description": "Using this method to add/edit the stock informations.\n\n18DEC23 Update: locationRecords required to be compare/maintain on yor local devices / then push back the new array to this API portal. API will OVERWRITE the whole array rather than pushback new records.\n",
        "operationId": "updateStocks",
        "parameters": [
          {
            "name": "upsert",
            "in": "query",
            "description": "Set if this data required to be upserted (default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": false,
              "enum": [
                true,
                false
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "$ref": "#/components/schemas/stock"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks/move": {
      "post": {
        "tags": [
          "Stocks"
        ],
        "summary": "Move Stock by Item Label ID | 提供Label ID以添加产品移动记录",
        "description": "Move Stock by giving newLocation and item.productLabel, if item does not exist, it will redirect to add action as insert. | 提供newLocation和item中的ProductLabel字段作为更新条件，该状态下不支持upsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newLocation": {
                    "type": "string"
                  },
                  "item": {
                    "type": "object",
                    "properties": {
                      "productLabel": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "moveStocks",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks/remove": {
      "post": {
        "tags": [
          "Stocks"
        ],
        "summary": "Remove Stock by Item Label ID | 提供Label ID以添加产品移除记录",
        "description": "Only productLabel field will be required, data parameter is optional | 仅要求传入信息，时间参数为可选",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "productLabel": {
                        "type": "string"
                      },
                      "removeTime": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "removeStocks",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stocks/delete": {
      "delete": {
        "tags": [
          "Stocks"
        ],
        "summary": "Delete a stock from database",
        "operationId": "deleteStock",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Product Label ID to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete"
          },
          "400": {
            "description": "Invalid stock value"
          }
        }
      }
    },
    "/v1/preload": {
      "get": {
        "tags": [
          "Preload"
        ],
        "summary": "Get all available current Stocks inhouse | 获取所有当前预填充信息",
        "operationId": "getPrefill",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Optional, Using at lease 2 characters for location to filter the result | 可选参数，需要提供至少2位字母的库位号来过滤库存信息",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Optional, typein part of label id (at least 3 characters) to filter the results | 可选参数，可以使用labelid的尾部字段（至少3位字符）来筛选需要的库存信息",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Optional, typein part of product id (at least 3 characters) to filter the results | 可选参数，使用产品ID（至少3位字符）来筛选需要的库存信息",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/preload/update": {
      "post": {
        "tags": [
          "Preload"
        ],
        "summary": "Prefill/Edit the information for stocks inbound | 预填充/修改即将上架的货品信息",
        "operationId": "updatePreload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "$ref": "#/components/schemas/preloadlog"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/preload/remove": {
      "post": {
        "tags": [
          "Preload"
        ],
        "summary": "Remove the Pre-fill data by LabelID | 根据预填充的Label ID删除预填充的数据",
        "operationId": "addPreload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productLabel": {
                    "type": "string",
                    "example": "20201201ABCDEF"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Get all snapshots available | 获取所有可用的历史记录列表",
        "operationId": "selectSessions",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error"
          }
        }
      }
    },
    "/v1/snapshots/add": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Create a snapshot of current stock records | 创建一个当前的盘点镜像结果",
        "description": "Snapshot will show in a frozen timeframe of stock records in database, however, if the relevent record has permenant deleted from database, then it will not be available in snapshots either",
        "operationId": "snapshotCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": {
                    "type": "string",
                    "example": "20201201ABCDEF"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create session success | 创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/session"
                }
              }
            }
          },
          "500": {
            "description": "Create session Failed | 创建失败",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/session/logs": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Get all products under current sort-take session | 获取某个会话的盘点结果",
        "operationId": "getSessionlog",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Code of request session log | 需要获取列表的sessioncode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/session/delete": {
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Delete a snapshot based on snapshot id provided",
        "operationId": "removeSnapshotDELETE",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session code that wish to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pollinglogsRespose"
                }
              }
            }
          },
          "500": {
            "description": "System Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trueORfalse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "trueORfalse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "object",
            "description": "This session remain as empty under this request"
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "session": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "object",
            "description": "Session Infos",
            "properties": {
              "session": {
                "type": "string",
                "description": "7bit code of session identifier"
              },
              "startDate": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "Session start time"
              },
              "endDate": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "Session finish time"
              },
              "logTime": {
                "type": "string",
                "format": "YYYY-MM-DD HH:mm:ss",
                "example": "2021-01-01 12:34:56",
                "description": "System automated logged time when entry inputed"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "pollinglog": {
        "type": "object",
        "properties": {
          "session": {
            "type": "string",
            "example": "1A2B3C4",
            "description": "When adding stocks, using STOCK as session code. | 当添加库存且不指定会话代码时，可使用STOCK替代"
          },
          "productCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "quantityUnit": {
            "type": "string",
            "example": "Bag"
          },
          "shelfLocation": {
            "type": "string",
            "example": "AA"
          },
          "POnumber": {
            "type": "string",
            "description": "Purchease Order Identification Number (Optional)"
          },
          "productName": {
            "type": "string"
          },
          "bestbefore": {
            "type": "string",
            "format": "date"
          },
          "productLabel": {
            "type": "string",
            "description": "Product Label Identification Number, must be identical, format as YYYYMMDD1234567, last 7 chars can be Hexadecimal"
          },
          "loggingTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "removed": {
            "type": "integer",
            "format": "int32",
            "description": "Flag used to identify whether product has been removed from DB"
          },
          "removeTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "unitPrice": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, Unit price of the item | 可选字段，产品价格"
          },
          "grossPrice": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, Unit price of the item | 可选字段，产品价格"
          }
        }
      },
      "stock": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": ""
            },
            "description": "DEC2023 update, By session will store all the stock-take session that it has involved."
          },
          "productCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "quantityUnit": {
            "type": "string",
            "example": "Bag"
          },
          "shelfLocation": {
            "type": "string",
            "example": "AA",
            "description": "DEC2023 update, DEPRECATED by JAN2024, This field is replaced by locationRecords"
          },
          "POnumber": {
            "type": "string",
            "description": "Purchease Order Identification Number (Optional)"
          },
          "productName": {
            "type": "string"
          },
          "bestbefore": {
            "type": "string",
            "format": "date"
          },
          "productLabel": {
            "type": "string",
            "description": "Product Label Identification Number, must be identical, format as YYYYMMDD1234567, last 7 chars can be Hexadecimal"
          },
          "loggingTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "removed": {
            "type": "integer",
            "format": "int32",
            "description": "Flag used to identify whether product has been removed from DB"
          },
          "removeTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "unitprice": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, Unit price of the item"
          },
          "trackingId": {
            "type": "string",
            "description": "Tracking Number of this product, can be container ID on shipping Vendor Id"
          },
          "transporter": {
            "type": "string",
            "description": "Name of shipping / carrier"
          }
        }
      },
      "preloadlog": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "quantityUnit": {
            "type": "string",
            "example": "Bag"
          },
          "shelfLocation": {
            "type": "string",
            "example": "AA"
          },
          "POnumber": {
            "type": "string",
            "description": "Purchease Order Identification Number (Ref for Ours)"
          },
          "productName": {
            "type": "string"
          },
          "bestbefore": {
            "type": "string",
            "format": "date"
          },
          "productLabel": {
            "type": "string",
            "description": "Product Label Identification Number, must be identical, format as YYYYMMDD1234567, last 7 chars can be Hexadecimal"
          },
          "unitPrice": {
            "type": "string",
            "description": "Product unit price"
          },
          "grossPrice": {
            "type": "string",
            "description": "Product gross price"
          },
          "createTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Format must be YYYY-MM-DD HH:mm:ss"
          },
          "removed": {
            "type": "integer",
            "format": "int32",
            "description": "Flag used to identify whether product has been removed from DB"
          },
          "trackingId": {
            "type": "string",
            "description": "Tracking Number of this product, can be container ID on shipping Vendor Id"
          },
          "transporter": {
            "type": "string",
            "description": "Name of shipping / carrier"
          }
        }
      },
      "locationRecords": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "example": "AA1",
            "description": "E.g. AB1 Refers Aisle A, Rack B, Level 1"
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "Object(YYYY-MM-DD HH:mm:ss)",
            "description": "Record the change effect date&time"
          }
        }
      },
      "pollinglogsRespose": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stock"
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "product": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "productCode": {
            "type": "string",
            "description": "Mandatory, the code used to identify the item, and it should be unique, unless it has unique vendor code under same productCode | 必须字段，产品的ID，该编号须独一无二，若需要复用该编号，须确认两条产品信息有不同的vendorCode"
          },
          "labelname": {
            "type": "string",
            "description": "Optional, the name to be used to print on label | 可选字段，用来打印托盘标签时候使用"
          },
          "cartonQty": {
            "type": "integer",
            "format": "int32",
            "description": "Optional, the number of products in a carton | 可选字段，用来标记每箱中的产品数量"
          },
          "palletQty": {
            "type": "integer",
            "format": "int32",
            "description": "Optional, the number of products in a pallet/skid | 可选字段，用来标记每箱中的产品数量"
          },
          "productUnit": {
            "type": "string",
            "example": "carton",
            "description": "Mandatory, the minimum package unit name of the product | 必须字段，产品的最少单位名称"
          },
          "vendorCode": {
            "type": "string",
            "description": "Optional, the vendor's product code for this item | 可选字段，产品在上游供应商的商品ID"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Optional, the weight of each unit, recommand measure with grams | 可选字段，产品的重量（推荐用克表示）"
          },
          "height": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, the height of each unit (cm) | 可选字段，产品的高度（单位cm）"
          },
          "length": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, the length of each unit (cm) | 可选字段，产品的长度（单位cm）"
          },
          "width": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, the width of each unit (cm) | 可选字段，产品的宽度（单位cm）"
          },
          "unitPrice": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, Unit price of the item | 可选字段，产品价格"
          },
          "sellPrice": {
            "type": "number",
            "multipleOf": 0.01,
            "description": "Optional, Selling price of the item"
          },
          "withBestbefore": {
            "type": "integer",
            "format": "int",
            "description": "Mandatory, does this product has expire date? (Y=1, N=0)",
            "enum": [
              0,
              1
            ]
          }
        }
      },
      "productsResponse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      },
      "baseResponse": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "boolean",
            "description": "Flag of respond status"
          },
          "message": {
            "type": "string",
            "description": "Detail of error informations"
          }
        }
      }
    }
  }
}